{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _jsxFileName = \"C:\\\\Users\\\\mirta\\\\Desktop\\\\Projekt R-mobilna\\\\SpaceInvaders\\\\screens\\\\login\\\\NameScreen.tsx\";\n\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Container from \"../../components/layout/Container\";\nimport { Text } from \"../../components/reusable-components/Text\";\nimport Button from \"../../components/reusable-components/Button\";\nimport { useStudentsData } from \"../../context/classContext\";\nimport styled from 'styled-components';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { theme } from \"../../constants/Theme\";\nimport { useAuth } from \"../../auth/authContext\";\nvar StyledScrollView = styled(FlatList)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  overflow: visible;\\n  margin-left: \", \"px;\\n\"])), wp('5%'));\nvar NameCard = styled(TouchableOpacity)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  /* display: flex;\\n  flex-direction: row;\\n  justify-content: center; */\\n\"])));\nexport default function NameScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useStudentsData = useStudentsData(),\n      students = _useStudentsData.students;\n\n  var _useAuth = useAuth(),\n      chooseName = _useAuth.chooseName;\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(NameCard, {\n      onPress: function onPress() {\n        chooseName(item.studentId);\n        navigation.navigate('ImageScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      fontSize: hp('3%'),\n      lineHeight: hp('6%'),\n      textAlign: \"center\",\n      color: theme.palette.chinaRose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, item.name, \" \", item.surname));\n  };\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"nannanananaa\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.push('ScreenTwo');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Go to Screen Two!\")), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"lista\"), React.createElement(StyledScrollView, {\n    data: students,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.studentId.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.push('NameScreen');\n    },\n    type: \"secondary\",\n    label: \"Go to networks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/mirta/Desktop/Projekt R-mobilna/SpaceInvaders/screens/login/NameScreen.tsx"],"names":["React","Container","Text","Button","useStudentsData","styled","widthPercentageToDP","wp","heightPercentageToDP","hp","theme","useAuth","StyledScrollView","FlatList","NameCard","TouchableOpacity","NameScreen","navigation","students","chooseName","renderItem","item","studentId","navigate","palette","chinaRose","name","surname","push","toString"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,SAAP;AAEA,SAASC,IAAT;AACA,OAAOC,MAAP;AACA,SAAmBC,eAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,mBAAmB,IAAIC,EAAhC,EAAoCC,oBAAoB,IAAIC,EAA5D,QAAsE,gCAAtE;AACA,SAASC,KAAT;AAEA,SAASC,OAAT;AAEA,IAAMC,gBAAgB,GAAGP,MAAM,CAACQ,QAAD,CAAT,2HAELN,EAAE,CAAC,IAAD,CAFG,CAAtB;AAKA,IAAMO,QAAQ,GAAGT,MAAM,CAACU,gBAAD,CAAT,0JAAd;AAMA,eAAe,SAASC,UAAT,OAAwE;AAAA;;AAAA,MAAlDC,UAAkD,QAAlDA,UAAkD;;AACrF,yBAAqBb,eAAe,EAApC;AAAA,MAAQc,QAAR,oBAAQA,QAAR;;AACA,iBAAuBP,OAAO,EAA9B;AAAA,MAAQQ,UAAR,YAAQA,UAAR;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WACjB,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,mBAAM;AACbF,QAAAA,UAAU,CAACE,IAAI,CAACC,SAAN,CAAV;AACAL,QAAAA,UAAU,CAACM,QAAX,CAAoB,aAApB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAEd,EAAE,CAAC,IAAD,CAAlB;AAA0B,MAAA,UAAU,EAAEA,EAAE,CAAC,IAAD,CAAxC;AAAgD,MAAA,SAAS,EAAC,QAA1D;AAAmE,MAAA,KAAK,EAAEC,KAAK,CAACc,OAAN,CAAcC,SAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,IAAI,CAACK,IADR,OACeL,IAAI,CAACM,OADpB,CANF,CADiB;AAAA,GAAnB;;AAaA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAACW,IAAX,CAAgB,WAAhB,CAAN;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAFF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAME,oBAAC,gBAAD;AACE,IAAA,IAAI,EAAEV,QADR;AAEE,IAAA,UAAU,EAAEE,UAFd;AAGE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAeA,IAAI,CAACC,SAAL,CAAeO,QAAf,EAAf;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAYE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMZ,UAAU,CAACW,IAAX,CAAgB,YAAhB,CAAN;AAAA,KAAjB;AAAsD,IAAA,IAAI,EAAC,WAA3D;AAAuE,IAAA,KAAK,EAAC,gBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD","sourcesContent":["import * as React from 'react';\r\nimport { FlatList, TouchableOpacity, View } from 'react-native';\r\nimport Container from '../../components/layout/Container';\r\nimport { RootStackScreenProps } from '../../navigation/root-navigator';\r\nimport { Text } from '../../components/reusable-components/Text';\r\nimport Button from '../../components/reusable-components/Button';\r\nimport { IStudent, useStudentsData } from '../../context/classContext';\r\nimport styled from 'styled-components';\r\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nimport { theme } from '../../constants/Theme';\r\nimport { useState } from 'react';\r\nimport { useAuth } from '../../auth/authContext';\r\n\r\nconst StyledScrollView = styled(FlatList)`\r\n  overflow: visible;\r\n  margin-left: ${wp('5%')}px;\r\n`;\r\n\r\nconst NameCard = styled(TouchableOpacity)`\r\n  /* display: flex;\r\n  flex-direction: row;\r\n  justify-content: center; */\r\n`;\r\n\r\nexport default function NameScreen({ navigation }: RootStackScreenProps<'NameScreen'>) {\r\n  const { students } = useStudentsData();\r\n  const { chooseName } = useAuth();\r\n  // const [student, setStudent] = useState('');\r\n  const renderItem = ({ item }: any) => (\r\n    <NameCard\r\n      onPress={() => {\r\n        chooseName(item.studentId);\r\n        navigation.navigate('ImageScreen');\r\n      }}\r\n    >\r\n      <Text fontSize={hp('3%')} lineHeight={hp('6%')} textAlign=\"center\" color={theme.palette.chinaRose}>\r\n        {item.name} {item.surname}\r\n      </Text>\r\n    </NameCard>\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Text>nannanananaa</Text>\r\n      <TouchableOpacity onPress={() => navigation.push('ScreenTwo')}>\r\n        <Text>Go to Screen Two!</Text>\r\n      </TouchableOpacity>\r\n      <Text>lista</Text>\r\n      <StyledScrollView\r\n        data={students}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item: any) => item.studentId.toString()}\r\n      />\r\n\r\n      <Button onPress={() => navigation.push('NameScreen')} type=\"secondary\" label=\"Go to networks\" />\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}