{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirta\\\\Desktop\\\\Projekt R-mobilna\\\\SpaceInvaders\\\\navigation\\\\index.tsx\",\n    _this = this;\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport ScreenOne from \"../screens/ScreenOne\";\nimport { useAuth } from \"../auth/authContext\";\nimport ScreenTwo from \"../screens/ScreenTwo\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport CodeScreen from \"../screens/login/CodeScreen\";\nimport NameScreen from \"../screens/login/NameScreen\";\nimport ImageScreen from \"../screens/login/ImageScreen\";\nimport GameScreen from \"../screens/GameScreen\";\nvar Stack = createNativeStackNavigator();\nexport default function Navigation() {\n  var _useAuth = useAuth(),\n      authData = _useAuth.authData;\n\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\nvar screenOptionStyle = {\n  headerShown: false\n};\n\nvar RootNavigator = function RootNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: screenOptionStyle,\n    initialRouteName: \"ScreenOne\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"CodeScreen\",\n    component: CodeScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ScreenOne\",\n    component: ScreenOne,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NameScreen\",\n    component: NameScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ImageScreen\",\n    component: ImageScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"GameScreen\",\n    component: GameScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ScreenTwo\",\n    component: ScreenTwo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar AuthStack = function AuthStack() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: screenOptionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"CodeScreen\",\n    component: CodeScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/mirta/Desktop/Projekt R-mobilna/SpaceInvaders/navigation/index.tsx"],"names":["NavigationContainer","createNativeStackNavigator","React","NotFoundScreen","ScreenOne","useAuth","ScreenTwo","LinkingConfiguration","CodeScreen","NameScreen","ImageScreen","GameScreen","Stack","Navigation","authData","screenOptionStyle","headerShown","RootNavigator","title","AuthStack"],"mappings":";;;AAKA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,cAAP;AACA,OAAOC,SAAP;AACA,SAASC,OAAT;AACA,OAAOC,SAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AAEA,OAAOC,UAAP;AAEA,IAAMC,KAAK,GAAGX,0BAA0B,EAAxC;AAEA,eAAe,SAASY,UAAT,GAAsB;AACnC,iBAAqBR,OAAO,EAA5B;AAAA,MAAQS,QAAR,YAAQA,QAAR;;AAEA,SACE,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEP,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;AAED,IAAMQ,iBAAiB,GAAG;AACxBC,EAAAA,WAAW,EAAE;AADW,CAA1B;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAEF,iBAAhC;AAAyD,IAAA,gBAAgB,EAAC,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEP,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAEJ,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEK,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAiC,IAAA,SAAS,EAAEC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAEL,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEH,cAAzC;AAAyD,IAAA,OAAO,EAAE;AAAEe,MAAAA,KAAK,EAAE;AAAT,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAZD;;AAcA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAEJ,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEP,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND","sourcesContent":["/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\n\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport ScreenOne from '../screens/ScreenOne';\r\nimport { useAuth } from '../auth/authContext';\r\nimport ScreenTwo from '../screens/ScreenTwo';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport CodeScreen from '../screens/login/CodeScreen';\r\nimport NameScreen from '../screens/login/NameScreen';\r\nimport ImageScreen from '../screens/login/ImageScreen';\r\nimport { RootStackParamList } from './root-navigator';\r\nimport GameScreen from '../screens/GameScreen';\r\n\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nexport default function Navigation() {\r\n  const { authData } = useAuth();\r\n\r\n  return (\r\n    <NavigationContainer linking={LinkingConfiguration}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst screenOptionStyle = {\r\n  headerShown: false,\r\n};\r\n\r\nconst RootNavigator = () => {\r\n  return (\r\n    <Stack.Navigator screenOptions={screenOptionStyle as {}} initialRouteName=\"ScreenOne\">\r\n      <Stack.Screen name=\"CodeScreen\" component={CodeScreen} />\r\n      <Stack.Screen name=\"ScreenOne\" component={ScreenOne} />\r\n      <Stack.Screen name=\"NameScreen\" component={NameScreen} />\r\n      <Stack.Screen name=\"ImageScreen\" component={ImageScreen} />\r\n      <Stack.Screen name=\"GameScreen\" component={GameScreen} />\r\n      <Stack.Screen name=\"ScreenTwo\" component={ScreenTwo} />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst AuthStack = () => {\r\n  return (\r\n    <Stack.Navigator screenOptions={screenOptionStyle as {}}>\r\n      <Stack.Screen name=\"CodeScreen\" component={CodeScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}