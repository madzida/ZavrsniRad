{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var AxiosInstance = axios.create({\n  baseURL: 'https://projekt-fer.herokuapp.com'\n});\nAxiosInstance.interceptors.request.use(function _callee(request) {\n  var token;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(getAuthData());\n\n        case 2:\n          token = _context.sent;\n\n          if (request.headers) {\n            request.headers['Authorization'] = 'Bearer ' + token;\n          }\n\n          return _context.abrupt(\"return\", request);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\nAxiosInstance.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  throw error;\n});\n\nvar getAuthData = function getAuthData() {\n  var data, authData;\n  return _regeneratorRuntime.async(function getAuthData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@AuthData'));\n\n        case 2:\n          data = _context2.sent;\n\n          if (!data) {\n            _context2.next = 8;\n            break;\n          }\n\n          authData = JSON.parse(data);\n          return _context2.abrupt(\"return\", authData.token);\n\n        case 8:\n          return _context2.abrupt(\"return\", '');\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/mirta/Desktop/Projekt R-mobilna/SpaceInvaders/auth/AxiosInstance.tsx"],"names":["axios","AsyncStorage","AxiosInstance","create","baseURL","interceptors","request","use","getAuthData","token","headers","response","error","getItem","data","authData","JSON","parse"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,OAAO,IAAMC,aAAa,GAAGF,KAAK,CAACG,MAAN,CAAa;AACxCC,EAAAA,OAAO,EAAE;AAD+B,CAAb,CAAtB;AAIPF,aAAa,CAACG,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,iBAAOD,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACjBE,WAAW,EADM;;AAAA;AAC/BC,UAAAA,KAD+B;;AAGrC,cAAIH,OAAO,CAACI,OAAZ,EAAqB;AACnBJ,YAAAA,OAAO,CAACI,OAAR,CAAgB,eAAhB,IAAmC,YAAYD,KAA/C;AACD;;AALoC,2CAM9BH,OAN8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvC;AASAJ,aAAa,CAACG,YAAd,CAA2BM,QAA3B,CAAoCJ,GAApC,CACE,UAACI,QAAD,EAAc;AACZ,SAAOA,QAAP;AACD,CAHH,EAIE,UAACC,KAAD,EAAW;AACT,QAAMA,KAAN;AACD,CANH;;AASA,IAAMJ,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACCP,YAAY,CAACY,OAAb,CAAqB,WAArB,CADD;;AAAA;AACZC,UAAAA,IADY;;AAAA,eAEdA,IAFc;AAAA;AAAA;AAAA;;AAGVC,UAAAA,QAHU,GAGWC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAHX;AAAA,4CAITC,QAAQ,CAACN,KAJA;;AAAA;AAAA,4CAMT,EANS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["// import React from 'react';\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { AuthData } from './authContext';\r\n\r\nexport const AxiosInstance = axios.create({\r\n  baseURL: 'https://projekt-fer.herokuapp.com',\r\n});\r\n\r\nAxiosInstance.interceptors.request.use(async (request) => {\r\n  const token = await getAuthData();\r\n\r\n  if (request.headers) {\r\n    request.headers['Authorization'] = 'Bearer ' + token;\r\n  }\r\n  return request;\r\n});\r\n\r\nAxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    throw error;\r\n  }\r\n);\r\n\r\nconst getAuthData = async () => {\r\n  const data = await AsyncStorage.getItem('@AuthData');\r\n  if (data) {\r\n    const authData: AuthData = JSON.parse(data);\r\n    return authData.token;\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}