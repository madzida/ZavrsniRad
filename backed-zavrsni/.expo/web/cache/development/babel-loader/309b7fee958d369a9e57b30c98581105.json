{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _jsxFileName = \"C:\\\\Users\\\\mirta\\\\Desktop\\\\Projekt R-mobilna\\\\SpaceInvaders\\\\screens\\\\login\\\\CodeScreen.tsx\";\n\nimport * as React from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from \"../../components/reusable-components/Text\";\nimport Button from \"../../components/reusable-components/Button\";\nimport { InputField } from \"../../components/InputField\";\nimport { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { theme } from \"../../constants/Theme\";\nimport { useStudentsData } from \"../../context/classContext\";\nvar Wrapper = styled(View)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  justify-content: space-between;\\n  flex-direction: column;\\n  height: 100%;\\n  padding: 0 5%;\\n  height: 100%;\\n  background-color: \", \";\\n\"])), theme.palette.champagne);\nvar InputContainer = styled(View)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  padding-top: 40%;\\n  display: flex;\\n  justify-content: space-between;\\n  height: 50%;\\n\"])));\nexport default function CodeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      classCode = _useState2[0],\n      setClassCode = _useState2[1];\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      valid = _React$useState2[0],\n      setValid = _React$useState2[1];\n\n  var _useStudentsData = useStudentsData(),\n      students = _useStudentsData.students,\n      getClass = _useStudentsData.getClass;\n\n  var onSubmit = useCallback(function () {\n    Keyboard.dismiss();\n\n    if (classCode === '') {\n      setValid(false);\n    } else {\n      setValid(true);\n      getClass(classCode);\n    }\n\n    if (students.length !== 0) {\n      navigation.navigate('NameScreen');\n    }\n  }, [classCode, getClass, navigation, students]);\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    textAlign: \"center\",\n    fontFamily: theme.fonts.robotoMedium,\n    fontSize: hp('4.5%'),\n    lineHeight: hp('5%'),\n    color: theme.palette.chinaRose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Enter your class code:\"), React.createElement(InputField, {\n    borderRadius: 25,\n    value: classCode,\n    onChange: setClassCode,\n    onChangeEnd: function onChangeEnd() {\n      return console.log(classCode);\n    },\n    keyboardType: \"number-pad\",\n    classId: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    onPress: onSubmit,\n    type: \"primary\",\n    label: \"ENTER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/mirta/Desktop/Projekt R-mobilna/SpaceInvaders/screens/login/CodeScreen.tsx"],"names":["React","Text","Button","InputField","useState","useCallback","styled","heightPercentageToDP","hp","theme","useStudentsData","Wrapper","View","palette","champagne","InputContainer","CodeScreen","navigation","classCode","setClassCode","valid","setValid","students","getClass","onSubmit","Keyboard","dismiss","length","navigate","fonts","robotoMedium","chinaRose","console","log"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAGA,SAASC,IAAT;AACA,OAAOC,MAAP;AACA,SAASC,UAAT;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,oBAAoB,IAAIC,EAAjC,QAA2C,gCAA3C;AACA,SAASC,KAAT;AACA,SAASC,eAAT;AAEA,IAAMC,OAAO,GAAGL,MAAM,CAACM,IAAD,CAAT,4OAOSH,KAAK,CAACI,OAAN,CAAcC,SAPvB,CAAb;AASA,IAAMC,cAAc,GAAGT,MAAM,CAACM,IAAD,CAAT,wKAApB;AAOA,eAAe,SAASI,UAAT,OAAwE;AAAA,MAAlDC,UAAkD,QAAlDA,UAAkD;;AACrF,kBAAkCb,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOc,SAAP;AAAA,MAAkBC,YAAlB;;AACA,wBAA0BnB,KAAK,CAACI,QAAN,CAAe,IAAf,CAA1B;AAAA;AAAA,MAAOgB,KAAP;AAAA,MAAcC,QAAd;;AAEA,yBAA+BX,eAAe,EAA9C;AAAA,MAAQY,QAAR,oBAAQA,QAAR;AAAA,MAAkBC,QAAlB,oBAAkBA,QAAlB;;AASA,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,YAAM;AACjCoB,IAAAA,QAAQ,CAACC,OAAT;;AAGA,QAAIR,SAAS,KAAK,EAAlB,EAAsB;AACpBG,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,MAAAA,QAAQ,CAACL,SAAD,CAAR;AAED;;AACD,QAAII,QAAQ,CAACK,MAAT,KAAoB,CAAxB,EAA2B;AACzBV,MAAAA,UAAU,CAACW,QAAX,CAAoB,YAApB;AACD;AACF,GAd2B,EAczB,CAACV,SAAD,EAAYK,QAAZ,EAAsBN,UAAtB,EAAkCK,QAAlC,CAdyB,CAA5B;AAgBA,SACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEG,QAAQ,CAACC,OAA5C;AAAqD,IAAA,UAAU,EAAE,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,UAAU,EAAEjB,KAAK,CAACoB,KAAN,CAAYC,YAF1B;AAGE,IAAA,QAAQ,EAAEtB,EAAE,CAAC,MAAD,CAHd;AAIE,IAAA,UAAU,EAAEA,EAAE,CAAC,IAAD,CAJhB;AAKE,IAAA,KAAK,EAAEC,KAAK,CAACI,OAAN,CAAckB,SALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAUE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAE,EADhB;AAEE,IAAA,KAAK,EAAEb,SAFT;AAGE,IAAA,QAAQ,EAAEC,YAHZ;AAIE,IAAA,WAAW,EAAE;AAAA,aAAMa,OAAO,CAACC,GAAR,CAAYf,SAAZ,CAAN;AAAA,KAJf;AAKE,IAAA,YAAY,EAAC,YALf;AAME,IAAA,OAAO,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,EAoBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,QAAjB;AAA2B,IAAA,IAAI,EAAC,SAAhC;AAA0C,IAAA,KAAK,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF,CADF;AA0BD","sourcesContent":["import * as React from 'react';\r\nimport { Keyboard, TouchableWithoutFeedback, View } from 'react-native';\r\nimport { RootStackScreenProps } from '../../navigation/root-navigator';\r\nimport { Text } from '../../components/reusable-components/Text';\r\nimport Button from '../../components/reusable-components/Button';\r\nimport { InputField } from '../../components/InputField';\r\nimport { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nimport { theme } from '../../constants/Theme';\r\nimport { useStudentsData } from '../../context/classContext';\r\n\r\nconst Wrapper = styled(View)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  padding: 0 5%;\r\n  height: 100%;\r\n  background-color: ${theme.palette.champagne};\r\n`;\r\nconst InputContainer = styled(View)`\r\n  padding-top: 40%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 50%;\r\n`;\r\n\r\nexport default function CodeScreen({ navigation }: RootStackScreenProps<'CodeScreen'>) {\r\n  const [classCode, setClassCode] = useState('');\r\n  const [valid, setValid] = React.useState(true);\r\n  //TODO change class to grade because of consistency\r\n  const { students, getClass } = useStudentsData();\r\n  /* const validateForm = () => {\r\n    if (classCode === '') {\r\n      setCodeValid('This is required!');\r\n      return false;\r\n    }\r\n    return true;\r\n  }; */\r\n  //TODO refactor this\r\n  const onSubmit = useCallback(() => {\r\n    Keyboard.dismiss();\r\n\r\n    // const valid = validateForm();\r\n    if (classCode === '') {\r\n      setValid(false);\r\n    } else {\r\n      setValid(true);\r\n      getClass(classCode);\r\n      // console.log(students);\r\n    }\r\n    if (students.length !== 0) {\r\n      navigation.navigate('NameScreen');\r\n    }\r\n  }, [classCode, getClass, navigation, students]);\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\r\n      <Wrapper>\r\n        <InputContainer>\r\n          <Text\r\n            textAlign=\"center\"\r\n            fontFamily={theme.fonts.robotoMedium}\r\n            fontSize={hp('4.5%')}\r\n            lineHeight={hp('5%')}\r\n            color={theme.palette.chinaRose}\r\n          >\r\n            Enter your class code:\r\n          </Text>\r\n          <InputField\r\n            borderRadius={25}\r\n            value={classCode}\r\n            onChange={setClassCode}\r\n            onChangeEnd={() => console.log(classCode)}\r\n            keyboardType=\"number-pad\"\r\n            classId\r\n          />\r\n        </InputContainer>\r\n        <Button onPress={onSubmit} type=\"primary\" label=\"ENTER\" />\r\n      </Wrapper>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}